# File: pull-request.yml

name: PR_$(SourceBranchName)_$(date:yyyyMMdd)$(rev:.r)

pr:
  branches:
    include:
      - main
      - env-uat
      - env-prod
  paths:
    exclude:
      - /**/*.md
      - docs/*
      - .github/*
      - .gitignore

trigger: none

resources:
  - repo: self

pool:
  vmImage: "ubuntu-latest"

variables:
  - template: ./variables/global.yml
  - name: isProd
    value: $[in(variables['System.PullRequest.TargetBranch'], 'env-prod', 'refs/heads/env-prod')]
  - name: isUat
    value: $[in(variables['System.PullRequest.TargetBranch'], 'env-uat', 'refs/heads/env-uat')]
  - name: tf_apply
    value: false
  - name: helmsman_apply
    value: "--dry-run"
  - name: sourceBranch
    value: $[ variables['System.PullRequest.SourceBranch'] ]
  - name: targetBranch
    value: $[ variables['System.PullRequest.TargetBranch'] ]

stages:
  - stage: BuildDevTest
    displayName: Terraform Build DevTest
    condition: and(eq(variables.isProd, 'false'), eq(variables.isUat, 'false'))
    variables:
      - template: ./variables/dev.yml
      - name: environment
        value: dev
    jobs:
      - template: ./templates/infrastructure.yml
        parameters:
          TF_VERSION: ${{ variables.TF_VERSION }}
          TF_WORKSPACE_NAME: ${{ variables.environment }}
          TF_VAR_FILE: ${{ variables.tf_var_file }}
          TF_APPLY: ${{ variables.tf_apply }}
          AZ_SERVICE_CONNECTION: ${{ variables.AZ_SERVICE_CONNECTION }}
          TERRAFORM_DIRECTORY: ${{ variables.TERRAFORM_DIRECTORY }}

  - stage: BuildUat
    displayName: Terraform Build Uat
    dependsOn: []
    condition: eq(variables.isUat, 'true')
    variables:
      - template: ./variables/uat.yml
      - name: environment
        value: uat
    jobs:
      - template: ./templates/infrastructure.yml
        parameters:
          TF_VERSION: ${{ variables.TF_VERSION }}
          TF_WORKSPACE_NAME: ${{ variables.environment }}
          TF_VAR_FILE: ${{ variables.tf_var_file }}
          TF_APPLY: ${{ variables.tf_apply }}
          AZ_SERVICE_CONNECTION: ${{ variables.AZ_SERVICE_CONNECTION }}
          TERRAFORM_DIRECTORY: ${{ variables.TERRAFORM_DIRECTORY }}

  - stage: BuildProd
    displayName: Terraform Build Prod
    dependsOn: []
    condition: eq(variables.isProd, 'true')
    variables:
      - template: ./variables/prod.yml
      - name: environment
        value: prod
    jobs:
      - template: ./templates/infrastructure.yml
        parameters:
          TF_VERSION: ${{ variables.TF_VERSION }}
          TF_WORKSPACE_NAME: ${{ variables.environment }}
          TF_VAR_FILE: ${{ variables.tf_var_file }}
          TF_APPLY: ${{ variables.tf_apply }}
          AZ_SERVICE_CONNECTION: ${{ variables.AZ_SERVICE_CONNECTION }}
          TERRAFORM_DIRECTORY: ${{ variables.TERRAFORM_DIRECTORY }}

  - stage: DeployDevTest
    displayName: Helmsman Deploy DevTest
    dependsOn:
      - BuildDevTest
    condition: and(succeeded(), eq(variables.isProd, 'false'), eq(variables.isUat, 'false'))
    variables:
      - template: ./variables/dev.yml
      - name: environment
        value: dev
    jobs:
      - template: ./templates/release.yml
        parameters:
          HELMSMAN_VERSION: ${{ variables.HELMSMAN_VERSION }}
          HELMSMAN_TOML_FILE: ${{ variables.helmsman_toml_file }}
          HELMSMAN_APPLY: ${{ variables.helmsman_apply }}
          HELMSMAN_WORKSPACE_NAME: ${{ variables.environment }}
          KUBERNETES_SERVICE_CONNECTION: ${{ variables.KUBERNETES_SERVICE_CONNECTION }}
          KUBERNETES_SERVICE_ACCOUNT: ${{ variables.KUBERNETES_SERVICE_ACCOUNT }}
          KUBERNETES_NAMESPACE: ${{ variables.KUBERNETES_NAMESPACE }}
          BUILD_ENV: ${{ variables.BUILD_ENV }}

  - stage: DeployUat
    displayName: Helmsman Deploy Uat
    dependsOn:
      - BuildUat
    condition: and(succeeded(), eq(variables.isUat, 'true'))
    variables:
      - template: ./variables/uat.yml
      - name: environment
        value: uat
    jobs:
      - template: ./templates/release.yml
        parameters:
          HELMSMAN_VERSION: ${{ variables.HELMSMAN_VERSION }}
          HELMSMAN_TOML_FILE: ${{ variables.helmsman_toml_file }}
          HELMSMAN_APPLY: ${{ variables.helmsman_apply }}
          HELMSMAN_WORKSPACE_NAME: ${{ variables.environment }}
          KUBERNETES_SERVICE_CONNECTION: ${{ variables.KUBERNETES_SERVICE_CONNECTION }}
          KUBERNETES_SERVICE_ACCOUNT: ${{ variables.KUBERNETES_SERVICE_ACCOUNT }}
          KUBERNETES_NAMESPACE: ${{ variables.KUBERNETES_NAMESPACE }}
          BUILD_ENV: ${{ variables.BUILD_ENV }}

  - stage: DeployProd
    displayName: Helmsman Deploy Prod
    dependsOn:
      - BuildProd
    condition: and(succeeded(), eq(variables.isProd, 'true'))
    variables:
      - template: ./variables/prod.yml
      - name: environment
        value: prod
    jobs:
      - template: ./templates/release.yml
        parameters:
          HELMSMAN_VERSION: ${{ variables.HELMSMAN_VERSION }}
          HELMSMAN_TOML_FILE: ${{ variables.helmsman_toml_file }}
          HELMSMAN_APPLY: ${{ variables.helmsman_apply }}
          HELMSMAN_WORKSPACE_NAME: ${{ variables.environment }}
          KUBERNETES_SERVICE_CONNECTION: ${{ variables.KUBERNETES_SERVICE_CONNECTION }}
          KUBERNETES_SERVICE_ACCOUNT: ${{ variables.KUBERNETES_SERVICE_ACCOUNT }}
          KUBERNETES_NAMESPACE: ${{ variables.KUBERNETES_NAMESPACE }}
          BUILD_ENV: ${{ variables.BUILD_ENV }}
